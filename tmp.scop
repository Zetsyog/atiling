#                                                     
#          <|                                         
#           A                                         
#          /.\                                       
#     <|  [""M#                                     
#      A   | #            Clan McCloog Castle         
#     /.\ [""M#           [Generated by Clan 0.8.1]
#    [""M# | #  U"U#U                              
#     | #  | #  \ .:/                                
#     | #  | #___| #                                  
#     | "--'     .-"                                
#   |"-"-"-"-"-#-#-##                            
#   |     # ## ######                                 
#    \       .::::'/                                 
#     \      ::::'/                                  
#   :8a|    # # ##                                    
#   ::88a      ###                                    
#  ::::888a  8a ##::.                                 
#  ::::::888a88a[]::::                                
# :::::::::SUNDOGa8a::::. ..                          
# :::::8::::888:Y8888:::::::::...                     
#::':::88::::888::Y88a______________________________________________________
#:: ::::88a::::88a:Y88a                                  __---__-- __
#' .: ::Y88a:::::8a:Y88a                            __----_-- -------_-__
#  :' ::::8P::::::::::88aa.                   _ _- --  --_ --- __  --- __--
#.::  :::::::::::::::::::Y88as88a...s88aa.
#
# [File generated by the OpenScop Library 0.9.2]

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 4 0 0 0 2

# Parameters are provided
1
<strings>
N M
</strings>

# Number of statements
3

# =============================================== Statement 1
# Number of relations describing the statement:
5

# ----------------------------------------------  1.1 Domain
DOMAIN
5 6 2 0 0 2
# e/i|  i    j |  N    M |  1  
   1    1    0    0    0    0    ## i >= 0
   1   -1    0    1    0   -1    ## -i+N-1 >= 0
   1    0    0    1    0   -1    ## N-1 >= 0
   1    0    1    0    0    0    ## j >= 0
   1    1   -1    0    0    0    ## i-j >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
5 11 5 2 0 2
# e/i| c1   c2   c3   c4   c5 |  i    j |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    1    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  1.3 Access
READ
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |  N    M |  1  
   0   -1    0    0    0    0    0    0    4    ## Arr == B
   0    0   -1    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    ## [2] == j

WRITE
3 9 3 2 0 2
# e/i| Arr  [1]  [2]|  i    j |  N    M |  1  
   0   -1    0    0    0    0    0    0    4    ## Arr == B
   0    0   -1    0    1    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    ## [2] == j

READ
1 7 1 2 0 2
# e/i| Arr|  i    j |  N    M |  1  
   0   -1    0    0    0    0    5    ## Arr == alpha

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
B[i][j] += 2 * alpha;
</body>

# =============================================== Statement 2
# Number of relations describing the statement:
10

# ----------------------------------------------  2.1 Domain
DOMAIN
8 7 3 0 0 2
# e/i|  i    j    k |  N    M |  1  
   1    1    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0   -1    ## -i+N-1 >= 0
   1    0    0    0    1    0   -1    ## N-1 >= 0
   1    0    1    0    0    0    0    ## j >= 0
   1    1   -1    0    0    0    0    ## i-j >= 0
   1    0    0    1    0    0    0    ## k >= 0
   1    0    0   -1    0    1   -1    ## -k+M-1 >= 0
   1    0    0    0    0    1   -1    ## M-1 >= 0

# ----------------------------------------------  2.2 Scattering
SCATTERING
7 14 7 3 0 2
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    1    ## c5 == 1
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    ## c7 == 0

# ----------------------------------------------  2.3 Access
READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    8    ## Arr == C
   0    0   -1    0    1    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    ## [2] == j

WRITE
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    8    ## Arr == C
   0    0   -1    0    1    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    ## [2] == j

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    9    ## Arr == A
   0    0   -1    0    0    1    0    0    0    0    ## [1] == j
   0    0    0   -1    0    0    1    0    0    0    ## [2] == k

READ
1 8 1 3 0 2
# e/i| Arr|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    5    ## Arr == alpha

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    4    ## Arr == B
   0    0   -1    0    1    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0    0    ## [2] == k

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    4    ## Arr == B
   0    0   -1    0    0    1    0    0    0    0    ## [1] == j
   0    0    0   -1    0    0    1    0    0    0    ## [2] == k

READ
1 8 1 3 0 2
# e/i| Arr|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    5    ## Arr == alpha

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    9    ## Arr == A
   0    0   -1    0    1    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0    0    ## [2] == k

# ----------------------------------------------  2.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
C[i][j] += A[j][k] * alpha * B[i][k] + B[j][k] * alpha * A[i][k];
</body>

# =============================================== Statement 3
# Number of relations describing the statement:
5

# ----------------------------------------------  3.1 Domain
DOMAIN
8 7 3 0 0 2
# e/i|  i    j    k |  N    M |  1  
   1    1    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0   -1    ## -i+N-1 >= 0
   1    0    0    0    1    0   -1    ## N-1 >= 0
   1    0    1    0    0    0    0    ## j >= 0
   1    1   -1    0    0    0    0    ## i-j >= 0
   1    0    0    1    0    0    0    ## k >= 0
   1    0    0   -1    0    1   -1    ## -k+M-1 >= 0
   1    0    0    0    0    1   -1    ## M-1 >= 0

# ----------------------------------------------  3.2 Scattering
SCATTERING
7 14 7 3 0 2
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    1    ## c5 == 1
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    ## c6 == k
   0    0    0    0    0    0    0   -1    0    0    0    0    0    1    ## c7 == 1

# ----------------------------------------------  3.3 Access
WRITE
4 11 4 3 0 2
# e/i| Arr  [1]  [2]  [3]|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    0   10    ## Arr == D
   0    0   -1    0    0    1    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    0    1    0    0    0    0    ## [2] == j
   0    0    0    0   -1    0    0    1    0    0    0    ## [3] == k

READ
1 8 1 3 0 2
# e/i| Arr|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    5    ## Arr == alpha

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]|  i    j    k |  N    M |  1  
   0   -1    0    0    0    0    0    0    0    9    ## Arr == A
   0    0   -1    0    0    1    0    0    0    0    ## [1] == j
   0    0    0   -1    0    0    1    0    0    0    ## [2] == k

# ----------------------------------------------  3.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i j k
# Statement body expression
D[i][j][k] = alpha * A[j][k];
</body>

# =============================================== Extensions
<scatnames>
b0 i b1 j b2 k b3
</scatnames>

<arrays>
# Number of arrays
10
# Mapping array-identifiers/array-names
1 i
2 N
3 j
4 B
5 alpha
6 k
7 M
8 C
9 A
10 D
</arrays>

<coordinates>
# File name
loop0.tmp
# Starting line and column
2 0
# Ending line and column
14 0
# Indentation
1
</coordinates>

</OpenScop>

